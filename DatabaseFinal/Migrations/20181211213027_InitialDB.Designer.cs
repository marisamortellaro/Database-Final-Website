// <auto-generated />
using System;
using DatabaseFinal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DatabaseFinal.Migrations
{
    [DbContext(typeof(ShowsContext))]
    [Migration("20181211213027_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DatabaseFinal.Models.Anime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Animes");
                });

            modelBuilder.Entity("DatabaseFinal.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("DatabaseFinal.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnimeId");

                    b.Property<string>("Description");

                    b.Property<int>("NumEpisodes");

                    b.Property<int>("SeasonNum");

                    b.HasKey("Id");

                    b.HasIndex("AnimeId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("DatabaseFinal.Models.ShowHasGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnimeId");

                    b.Property<int?>("GenreId");

                    b.HasKey("Id");

                    b.HasIndex("AnimeId");

                    b.HasIndex("GenreId");

                    b.ToTable("ShowsHaveGenres");
                });

            modelBuilder.Entity("DatabaseFinal.Models.Season", b =>
                {
                    b.HasOne("DatabaseFinal.Models.Anime", "Anime")
                        .WithMany("Seasons")
                        .HasForeignKey("AnimeId");
                });

            modelBuilder.Entity("DatabaseFinal.Models.ShowHasGenre", b =>
                {
                    b.HasOne("DatabaseFinal.Models.Anime", "Anime")
                        .WithMany("ShowHasGenres")
                        .HasForeignKey("AnimeId");

                    b.HasOne("DatabaseFinal.Models.Genre", "Genre")
                        .WithMany("ShowsHaveGenre")
                        .HasForeignKey("GenreId");
                });
#pragma warning restore 612, 618
        }
    }
}
